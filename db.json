{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/another/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/another/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/another/source/js/motto.min.js","path":"js/motto.min.js","modified":0,"renderable":1},{"_id":"themes/another/source/images/bg.jpg","path":"images/bg.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/another/.editorconfig","hash":"b22b6ac1b86a8fa33ba091192f4dacf05dd78994","modified":1476239469000},{"_id":"themes/another/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1476239469000},{"_id":"themes/another/.jshintrc","hash":"312bfc7dc33e03f2ffdf541db6e8dd005ab832e2","modified":1476239469000},{"_id":"themes/another/LICENSE","hash":"2dcf9de1cd020a9f4a621202076cd2abc27df6ec","modified":1476239469000},{"_id":"themes/another/README.md","hash":"b1c48cff083a91f4fb24cafc14179458720eb187","modified":1476239469000},{"_id":"themes/another/_config.yml","hash":"53abc4591d85dd37fadfe12d4909634f70924d36","modified":1503557912278},{"_id":"themes/another/support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1476239469000},{"_id":"source/_posts/.spring-boot-helloword.md.swp","hash":"08273729da052e49af55d69f57e6db517a3d5865","modified":1503547455946},{"_id":"source/_posts/spring-boot-helloword.md","hash":"91a20f7b9926c4efc65746dc69b96796224d7374","modified":1503551550248},{"_id":"source/about/index.md","hash":"2fb2bbdf83d0626c2b22ea719c520aac63b08c96","modified":1503544677794},{"_id":"source/tags/index.md","hash":"4831fb5215f5c9427c4932da80ad11a3191cdf25","modified":1503543905162},{"_id":"themes/another/languages/de.yml","hash":"7a8de0e5665c52a1bf168c1e7dd222c8a74fb0ab","modified":1476239469000},{"_id":"themes/another/languages/default.yml","hash":"7e65ef918f16d0189055deb5f1616b9dedcb1920","modified":1476239469000},{"_id":"themes/another/languages/en.yml","hash":"8f5ec8998e250f8b70b42022ac82d21b9ee6776e","modified":1476239469000},{"_id":"themes/another/languages/fr-FR.yml","hash":"6d097445342a9fb5235afea35d65bf5271b772f0","modified":1476239469000},{"_id":"themes/another/languages/ru.yml","hash":"b4a827b9ddac9d5f6dca096fe513aeafb46a3e93","modified":1476239469000},{"_id":"themes/another/languages/zh-Hans.yml","hash":"681a9dacdc9f8e65969b49b04f54cec2b8546d7f","modified":1476239469000},{"_id":"themes/another/languages/zh-hk.yml","hash":"c2566ce6c1b2d34492a0f42a564076ec3492218d","modified":1476239469000},{"_id":"themes/another/languages/zh-tw.yml","hash":"89890935c47a51945479f6cfe8347475d99a5750","modified":1476239469000},{"_id":"themes/another/layout/_layout.swig","hash":"84713b984f0ec6e5de80ac86f74434a46be5e4f5","modified":1476239469000},{"_id":"themes/another/layout/category.swig","hash":"2f7b6d56f47837f64a14283448a15c1775fc7e93","modified":1476239469000},{"_id":"themes/another/layout/index.swig","hash":"1d67b0bf3df8e7033e5cc3ece04923c92774a9b8","modified":1476239469000},{"_id":"themes/another/layout/page.swig","hash":"a0e5ebfc836d4b957525ad9f775c61a74ea96e32","modified":1503558198425},{"_id":"themes/another/layout/post.swig","hash":"42bfe7d18752c1cfdc5f0a03389c18d11520942d","modified":1476239469000},{"_id":"themes/another/layout/tag.swig","hash":"1ffb6aef978d7dee7501e6d5575321055a781ad5","modified":1476239469000},{"_id":"themes/another/layout/_partials/comments.swig","hash":"a612a4eca51ffc87b53a5470b451071a7ad6a031","modified":1476239469000},{"_id":"themes/another/layout/_partials/donation.swig","hash":"ecd226c508cbe116e1222899c1f48508ee1066e2","modified":1476239469000},{"_id":"themes/another/layout/_partials/foot.swig","hash":"f9a963fa27258e24acf2cedd753b2c10a302f0ec","modified":1476239469000},{"_id":"themes/another/layout/_partials/footer.swig","hash":"49ed90d8072a62b8429105541a36381ff55ab366","modified":1476239469000},{"_id":"themes/another/layout/_partials/head.swig","hash":"d64af22dc58db498fb2d1d63089bd2732cf9dd24","modified":1476239469000},{"_id":"themes/another/layout/_partials/header.swig","hash":"9dd710630c41c253e0459eac2dfd90c916a857d0","modified":1476239469000},{"_id":"themes/another/layout/_partials/old-browsers.swig","hash":"fcddf1dbc2423105f9a2f5acd394bfe4172df5f8","modified":1476239469000},{"_id":"themes/another/layout/_partials/pagination.swig","hash":"2e8f5e3ae19691aba88e58210031ccdfe0fb7062","modified":1476239469000},{"_id":"themes/another/layout/_partials/post-content.swig","hash":"82d088ff728b22196ee3af35b49dc40406eebf82","modified":1476239469000},{"_id":"themes/another/layout/_partials/post-item.swig","hash":"6ce0b61c2ee39b5fe239e9c195d7e0b578203eb9","modified":1476239469000},{"_id":"themes/another/layout/_partials/post-sidebar.swig","hash":"110a80cde7b0429f41a616867459b429fbb92c83","modified":1476239469000},{"_id":"themes/another/layout/_partials/right-info.swig","hash":"591b742a8e379449d29d043ae600e2971cd387bf","modified":1476239469000},{"_id":"themes/another/layout/_scripts/analytics.swig","hash":"5f0cd572cc4c1c9a98a5de7086fdb0bb16d77219","modified":1476239469000},{"_id":"themes/another/source/css/main.styl","hash":"9617601d89711acef779400ba433839b3282c24a","modified":1476239469000},{"_id":"themes/another/source/js/main.js","hash":"6cfe133ed30a733115db2f1ac9cc902a15a65182","modified":1476239469000},{"_id":"themes/another/source/js/motto.min.js","hash":"f036c34caf0f92d108bd475ad166be90f7fa37e6","modified":1476239469000},{"_id":"themes/another/layout/_scripts/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1476239469000},{"_id":"themes/another/layout/_scripts/analytics/google-analytics.swig","hash":"f4068e3b7ba21ec8e42e0f5eca4296c1e5faa137","modified":1476239469000},{"_id":"themes/another/layout/_scripts/comments/disqus.swig","hash":"f916265becdbaa0a0422bd416e10393bb064857e","modified":1476239469000},{"_id":"themes/another/layout/_scripts/comments/duoshuo.swig","hash":"ba787392d0293e18b3537f8c67bee130712c201a","modified":1476239469000},{"_id":"themes/another/source/css/_pages/category.styl","hash":"551769a2e25a2e80369746426de86617bcf21737","modified":1476239469000},{"_id":"themes/another/source/css/_pages/index.styl","hash":"5fc9236ee89b7e0facb8dfe493c2fa4493ef150c","modified":1476239469000},{"_id":"themes/another/source/css/_pages/post.styl","hash":"5ef887d3d9dd1a4f6a47f05624756284046fcb1b","modified":1476239469000},{"_id":"themes/another/source/css/_pages/tag.styl","hash":"d8eb8dac3442c4528afd99c20ba9fddca282e99d","modified":1476239469000},{"_id":"themes/another/source/css/_partials/comments.styl","hash":"0b34fa4c3386f7a9228d1025f26c426c77698a21","modified":1476239469000},{"_id":"themes/another/source/css/_partials/footer.styl","hash":"e8027ae4c5e240f819986512f7026cd7cf424ccf","modified":1476239469000},{"_id":"themes/another/source/css/_partials/header.styl","hash":"33dc92f76b3b6afbd9884a87925af5394bf34e66","modified":1476239469000},{"_id":"themes/another/source/css/_partials/pagination.styl","hash":"19be2bc8bce2437ed572bbd753b735727aa8631c","modified":1476239469000},{"_id":"themes/another/source/css/_partials/post-sidebar.styl","hash":"fad903663ba6d9670840131b410f4492d0ad2e53","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/base.css","hash":"68d44e6d0315fc10d53004c9b7d907d740f9db61","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/media.styl","hash":"c00cce2339e9d8d756f91f8d9e26317c96db0d73","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/normalize.styl","hash":"b8fd54e3ca1ed801bc6b0349cd6352558a5aa390","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/post.css","hash":"b4dd0464804bc7a61ad5127c2f3c9c1efd2cb271","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/variables.styl","hash":"d689e06c316169eb01d643cdc50be218417681bf","modified":1476239469000},{"_id":"themes/another/source/images/bg.jpg","hash":"f0af0d6fd20e3b0daeecf773c18e80f1ba416cfa","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/highlight/highlight.styl","hash":"d4e486e8ea04850c49166e03bd59cc57c30dbdac","modified":1476239469000},{"_id":"themes/another/source/css/_vendor/highlight/theme.styl","hash":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1476239469000},{"_id":"public/about/index.html","hash":"01a33fc9929b0211d6d46c81133a4e85d6587102","modified":1503558221344},{"_id":"public/tags/index.html","hash":"11c12a9f58f421c659fa61c93222b17284f57974","modified":1503558221344},{"_id":"public/archives/index.html","hash":"b10a46b50ef717b13f3a4bfbb175a5165208d1c4","modified":1503558221344},{"_id":"public/archives/2017/index.html","hash":"e3c94dba3267ca1a0c42cc55ff9c9a501be8e66c","modified":1503558221344},{"_id":"public/archives/2017/08/index.html","hash":"989d82c03a05fc99da56ad7b5196ca21fb1bcc70","modified":1503558221345},{"_id":"public/index.html","hash":"fc5c05477e38dfeb444b9eae978dfadf11db64f1","modified":1503558221346},{"_id":"public/2017/08/24/spring-boot-helloword/index.html","hash":"769a3e7365951f084f1a6fe0a23f6bd08cfdc9ed","modified":1503558221346},{"_id":"public/js/main.js","hash":"6cfe133ed30a733115db2f1ac9cc902a15a65182","modified":1503558221869},{"_id":"public/js/motto.min.js","hash":"f036c34caf0f92d108bd475ad166be90f7fa37e6","modified":1503558221869},{"_id":"public/css/main.css","hash":"8f281c16eee16d735a4fa8d734fe17b88a14dc0c","modified":1503558221869},{"_id":"public/images/bg.jpg","hash":"f0af0d6fd20e3b0daeecf773c18e80f1ba416cfa","modified":1503558221871}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2017-08-24T03:04:57.000Z","_content":"崇尚简单和懒惰，沉默而爱憎分明。\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2017-08-24 11:04:57\n---\n崇尚简单和懒惰，沉默而爱憎分明。\n","updated":"2017-08-24T03:17:57.794Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj6q3qs750001o4ostl8samc6","content":"<p>崇尚简单和懒惰，沉默而爱憎分明。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>崇尚简单和懒惰，沉默而爱憎分明。</p>\n"},{"title":"tags","date":"2017-08-24T03:05:05.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-08-24 11:05:05\n---\n","updated":"2017-08-24T03:05:05.162Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj6q3qs770002o4os2ks3seov","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"【Hello Spring Boot】之HelloWorld","date":"2017-08-24T03:19:15.000Z","tagsi":"Spring Spring Boot Restful Web Java","_content":"# 简介\n## Spring Boot的主要优点：\n\n* 为所有Spring开发者更快的入门\n* 开箱即用，提供各种默认配置来简化项目配置\n* 内嵌式容器简化Web项目\n* 没有冗余代码生成和XML配置的要求\n\n-------\n# 快速入门\n## 系统要求\n* Java7及以上\n* Spring Framework 4.1.x及以上\n\n## 使用maven构建项目\n* 使用Spring官方Spring Initializer工具生成基础项目\n\n```\n访问：http://start.spring.io/\n选择构建工具、开发语言类型、Spring Boot版本、输入工程基本信息\n点击Generate Project\n```\n![](http://ounvdrscf.bkt.clouddn.com/001.png)\n\n* 解压项目包，并将项目导入IDE中(以idea为例)\n    \n```\n菜单中选择File->New->Project From Existing Sources...\n选择项目解压后的文件夹，找到对应的pom.xml文件，一路Next\n(注意jdk要选择1.7以上版本)\n```\n通过上面的步骤完成基本项目的创建，对项目的结构进行相应的更改后，变成下图所示的项目结构：\n![](http://ounvdrscf.bkt.clouddn.com/blog002.png)\n\n## 项目结构解析\n\n```\nsrc/main/java 程序的入口*****Application.java\nsrc/main/resources 程序的配置文件application.properties\n```\n生成的Application类可以直接运行启动当前创建的项目，但是由于该项目没有设置任何数据访问和Web模块，程序会再加载完后结束运行。\n## 引入Web模块\n通过当前项目的pom.xml文件引入两个模块\n\n```\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter</artifactId>\n    </dependency>\n    \n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n```\n\n## 编写helloworld服务\n\n```\n创建包controller用来存放控制器类\n新建控制器类HelloController\n\n@RestController\npublic class HelloController {\n\n    @GetMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n启动主程序，打开浏览器访问http://localhost:8080/hello,可以看到页面输出Hello World!\n```\n\n至此已完成目标：通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。\n","source":"_posts/spring-boot-helloword.md","raw":"---\ntitle: 【Hello Spring Boot】之HelloWorld\ndate: 2017-08-24 11:19:15\ntagsi: Spring Spring Boot Restful Web Java\n---\n# 简介\n## Spring Boot的主要优点：\n\n* 为所有Spring开发者更快的入门\n* 开箱即用，提供各种默认配置来简化项目配置\n* 内嵌式容器简化Web项目\n* 没有冗余代码生成和XML配置的要求\n\n-------\n# 快速入门\n## 系统要求\n* Java7及以上\n* Spring Framework 4.1.x及以上\n\n## 使用maven构建项目\n* 使用Spring官方Spring Initializer工具生成基础项目\n\n```\n访问：http://start.spring.io/\n选择构建工具、开发语言类型、Spring Boot版本、输入工程基本信息\n点击Generate Project\n```\n![](http://ounvdrscf.bkt.clouddn.com/001.png)\n\n* 解压项目包，并将项目导入IDE中(以idea为例)\n    \n```\n菜单中选择File->New->Project From Existing Sources...\n选择项目解压后的文件夹，找到对应的pom.xml文件，一路Next\n(注意jdk要选择1.7以上版本)\n```\n通过上面的步骤完成基本项目的创建，对项目的结构进行相应的更改后，变成下图所示的项目结构：\n![](http://ounvdrscf.bkt.clouddn.com/blog002.png)\n\n## 项目结构解析\n\n```\nsrc/main/java 程序的入口*****Application.java\nsrc/main/resources 程序的配置文件application.properties\n```\n生成的Application类可以直接运行启动当前创建的项目，但是由于该项目没有设置任何数据访问和Web模块，程序会再加载完后结束运行。\n## 引入Web模块\n通过当前项目的pom.xml文件引入两个模块\n\n```\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter</artifactId>\n    </dependency>\n    \n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n```\n\n## 编写helloworld服务\n\n```\n创建包controller用来存放控制器类\n新建控制器类HelloController\n\n@RestController\npublic class HelloController {\n\n    @GetMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n启动主程序，打开浏览器访问http://localhost:8080/hello,可以看到页面输出Hello World!\n```\n\n至此已完成目标：通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。\n","slug":"spring-boot-helloword","published":1,"updated":"2017-08-24T05:12:30.248Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3qs6y0000o4osikqdvy7v","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><h2 id=\"Spring-Boot的主要优点：\"><a href=\"#Spring-Boot的主要优点：\" class=\"headerlink\" title=\"Spring Boot的主要优点：\"></a>Spring Boot的主要优点：</h2><ul>\n<li>为所有Spring开发者更快的入门</li>\n<li>开箱即用，提供各种默认配置来简化项目配置</li>\n<li>内嵌式容器简化Web项目</li>\n<li>没有冗余代码生成和XML配置的要求</li>\n</ul>\n<hr>\n<h1 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h1><h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><ul>\n<li>Java7及以上</li>\n<li>Spring Framework 4.1.x及以上</li>\n</ul>\n<h2 id=\"使用maven构建项目\"><a href=\"#使用maven构建项目\" class=\"headerlink\" title=\"使用maven构建项目\"></a>使用maven构建项目</h2><ul>\n<li>使用Spring官方Spring Initializer工具生成基础项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">访问：http://start.spring.io/</div><div class=\"line\">选择构建工具、开发语言类型、Spring Boot版本、输入工程基本信息</div><div class=\"line\">点击Generate Project</div></pre></td></tr></table></figure>\n<p><img src=\"http://ounvdrscf.bkt.clouddn.com/001.png\" alt=\"\"></p>\n<ul>\n<li>解压项目包，并将项目导入IDE中(以idea为例)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">菜单中选择File-&gt;New-&gt;Project From Existing Sources...</div><div class=\"line\">选择项目解压后的文件夹，找到对应的pom.xml文件，一路Next</div><div class=\"line\">(注意jdk要选择1.7以上版本)</div></pre></td></tr></table></figure>\n<p>通过上面的步骤完成基本项目的创建，对项目的结构进行相应的更改后，变成下图所示的项目结构：<br><img src=\"http://ounvdrscf.bkt.clouddn.com/blog002.png\" alt=\"\"></p>\n<h2 id=\"项目结构解析\"><a href=\"#项目结构解析\" class=\"headerlink\" title=\"项目结构解析\"></a>项目结构解析</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/main/java 程序的入口*****Application.java</div><div class=\"line\">src/main/resources 程序的配置文件application.properties</div></pre></td></tr></table></figure>\n<p>生成的Application类可以直接运行启动当前创建的项目，但是由于该项目没有设置任何数据访问和Web模块，程序会再加载完后结束运行。</p>\n<h2 id=\"引入Web模块\"><a href=\"#引入Web模块\" class=\"headerlink\" title=\"引入Web模块\"></a>引入Web模块</h2><p>通过当前项目的pom.xml文件引入两个模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">    </div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">&lt;/dependencies&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"编写helloworld服务\"><a href=\"#编写helloworld服务\" class=\"headerlink\" title=\"编写helloworld服务\"></a>编写helloworld服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">创建包controller用来存放控制器类</div><div class=\"line\">新建控制器类HelloController</div><div class=\"line\"></div><div class=\"line\">@RestController</div><div class=\"line\">public class HelloController &#123;</div><div class=\"line\"></div><div class=\"line\">    @GetMapping(&quot;/hello&quot;)</div><div class=\"line\">    public String hello() &#123;</div><div class=\"line\">        return &quot;Hello World!&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">启动主程序，打开浏览器访问http://localhost:8080/hello,可以看到页面输出Hello World!</div></pre></td></tr></table></figure>\n<p>至此已完成目标：通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><h2 id=\"Spring-Boot的主要优点：\"><a href=\"#Spring-Boot的主要优点：\" class=\"headerlink\" title=\"Spring Boot的主要优点：\"></a>Spring Boot的主要优点：</h2><ul>\n<li>为所有Spring开发者更快的入门</li>\n<li>开箱即用，提供各种默认配置来简化项目配置</li>\n<li>内嵌式容器简化Web项目</li>\n<li>没有冗余代码生成和XML配置的要求</li>\n</ul>\n<hr>\n<h1 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h1><h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><ul>\n<li>Java7及以上</li>\n<li>Spring Framework 4.1.x及以上</li>\n</ul>\n<h2 id=\"使用maven构建项目\"><a href=\"#使用maven构建项目\" class=\"headerlink\" title=\"使用maven构建项目\"></a>使用maven构建项目</h2><ul>\n<li>使用Spring官方Spring Initializer工具生成基础项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">访问：http://start.spring.io/</div><div class=\"line\">选择构建工具、开发语言类型、Spring Boot版本、输入工程基本信息</div><div class=\"line\">点击Generate Project</div></pre></td></tr></table></figure>\n<p><img src=\"http://ounvdrscf.bkt.clouddn.com/001.png\" alt=\"\"></p>\n<ul>\n<li>解压项目包，并将项目导入IDE中(以idea为例)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">菜单中选择File-&gt;New-&gt;Project From Existing Sources...</div><div class=\"line\">选择项目解压后的文件夹，找到对应的pom.xml文件，一路Next</div><div class=\"line\">(注意jdk要选择1.7以上版本)</div></pre></td></tr></table></figure>\n<p>通过上面的步骤完成基本项目的创建，对项目的结构进行相应的更改后，变成下图所示的项目结构：<br><img src=\"http://ounvdrscf.bkt.clouddn.com/blog002.png\" alt=\"\"></p>\n<h2 id=\"项目结构解析\"><a href=\"#项目结构解析\" class=\"headerlink\" title=\"项目结构解析\"></a>项目结构解析</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/main/java 程序的入口*****Application.java</div><div class=\"line\">src/main/resources 程序的配置文件application.properties</div></pre></td></tr></table></figure>\n<p>生成的Application类可以直接运行启动当前创建的项目，但是由于该项目没有设置任何数据访问和Web模块，程序会再加载完后结束运行。</p>\n<h2 id=\"引入Web模块\"><a href=\"#引入Web模块\" class=\"headerlink\" title=\"引入Web模块\"></a>引入Web模块</h2><p>通过当前项目的pom.xml文件引入两个模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">    </div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">&lt;/dependencies&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"编写helloworld服务\"><a href=\"#编写helloworld服务\" class=\"headerlink\" title=\"编写helloworld服务\"></a>编写helloworld服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">创建包controller用来存放控制器类</div><div class=\"line\">新建控制器类HelloController</div><div class=\"line\"></div><div class=\"line\">@RestController</div><div class=\"line\">public class HelloController &#123;</div><div class=\"line\"></div><div class=\"line\">    @GetMapping(&quot;/hello&quot;)</div><div class=\"line\">    public String hello() &#123;</div><div class=\"line\">        return &quot;Hello World!&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">启动主程序，打开浏览器访问http://localhost:8080/hello,可以看到页面输出Hello World!</div></pre></td></tr></table></figure>\n<p>至此已完成目标：通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}